{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-ordes-dev"
		},
		"ls_dl_orders_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_dl_orders'"
		},
		"ls_st_orders_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_st_orders'"
		},
		"ls_dl_orders_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://devdlorders.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_orders_Landing_to_raw')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy orders landing to raw",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_landing_orders",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_raw_orders",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy customer landing to raw",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_landing_customers",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_raw_customers",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy products landing to raw",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_landing_product",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_raw_product",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy stores landing to raw",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_landing_stores",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dl_raw_stores",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy order items landing to raw_copy1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_landing_order_items",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_raw_order_items",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_landing_orders')]",
				"[concat(variables('factoryId'), '/datasets/ds_raw_orders')]",
				"[concat(variables('factoryId'), '/datasets/ds_landing_customers')]",
				"[concat(variables('factoryId'), '/datasets/ds_raw_customers')]",
				"[concat(variables('factoryId'), '/datasets/ds_landing_product')]",
				"[concat(variables('factoryId'), '/datasets/ds_raw_product')]",
				"[concat(variables('factoryId'), '/datasets/ds_landing_stores')]",
				"[concat(variables('factoryId'), '/datasets/dl_raw_stores')]",
				"[concat(variables('factoryId'), '/datasets/ds_landing_order_items')]",
				"[concat(variables('factoryId'), '/datasets/ds_raw_order_items')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_orders_raw_to_cleansed')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "RawToCleansedDataFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_orders_raw_to_cleansed",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"OrderItemsRaw": {},
									"CustomersRaw": {},
									"ProductsRaw": {},
									"StoresRaw": {},
									"OrdersRaw": {},
									"OrderItemsCleansed": {},
									"CustomersCleansed": {},
									"ProductsCleansed": {},
									"StoresCleansed": {},
									"OrdersCleansed": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_orders_raw_to_cleansed')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dl_raw_stores')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_dl_orders",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "02 Raw"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "stores.json",
						"fileSystem": "raw"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_dl_orders')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_cleansed_customers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_dl_orders",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "03 Cleansed"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "customers",
						"fileSystem": "cleansed"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_dl_orders')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_cleansed_order_items')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_dl_orders",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "03 Cleansed"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "order_items",
						"fileSystem": "cleansed"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_dl_orders')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_cleansed_orders')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_dl_orders",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "03 Cleansed"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "orders",
						"fileSystem": "cleansed"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_dl_orders')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_cleansed_products')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_dl_orders",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "03 Cleansed"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Products",
						"fileSystem": "cleansed"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_dl_orders')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_cleansed_stores')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_dl_orders",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "03 Cleansed"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "stores",
						"fileSystem": "cleansed"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_dl_orders')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_landing_customers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_st_orders",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "01Landing"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "customers.json",
						"container": "landing"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_st_orders')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_landing_order_items')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_st_orders",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "01Landing"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "order_items.txt",
						"container": "landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ORDER_ID",
						"type": "String"
					},
					{
						"name": "LINE_ITEM_ID",
						"type": "String"
					},
					{
						"name": "PRODUCT_ID",
						"type": "String"
					},
					{
						"name": "UNIT_PRICE",
						"type": "String"
					},
					{
						"name": "QUANTITY",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_st_orders')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_landing_orders')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_st_orders",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "01Landing"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "orders.parquet",
						"container": "landing"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_st_orders')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_landing_product')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_st_orders",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "01Landing"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "products.json",
						"container": "landing"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_st_orders')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_landing_stores')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_st_orders",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "01Landing"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "stores.json",
						"container": "landing"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"STORE_ID": {
							"type": "string"
						},
						"STORE_NAME": {
							"type": "string"
						},
						"WEB_ADDRESS": {
							"type": "string"
						},
						"LATITUDE": {
							"type": "string"
						},
						"LONGITUDE": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_st_orders')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_raw_customers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_dl_orders",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "02 Raw"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "customers.json",
						"fileSystem": "raw"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_dl_orders')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_raw_order_items')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_dl_orders",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "02 Raw"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "order_items.txt",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_dl_orders')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_raw_orders')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_dl_orders",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "02 Raw"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "orders.parquet",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_dl_orders')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_raw_product')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_dl_orders",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "02 Raw"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "products.json",
						"fileSystem": "raw"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_dl_orders')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_dl_orders')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_dl_orders_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_dl_orders_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_st_orders')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_st_orders_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_orders_raw_to_cleansed')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_raw_order_items",
								"type": "DatasetReference"
							},
							"name": "OrderItemsRaw"
						},
						{
							"dataset": {
								"referenceName": "ds_raw_customers",
								"type": "DatasetReference"
							},
							"name": "CustomersRaw"
						},
						{
							"dataset": {
								"referenceName": "ds_raw_product",
								"type": "DatasetReference"
							},
							"name": "ProductsRaw"
						},
						{
							"dataset": {
								"referenceName": "dl_raw_stores",
								"type": "DatasetReference"
							},
							"name": "StoresRaw"
						},
						{
							"dataset": {
								"referenceName": "ds_landing_orders",
								"type": "DatasetReference"
							},
							"name": "OrdersRaw"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_cleansed_order_items",
								"type": "DatasetReference"
							},
							"name": "OrderItemsCleansed"
						},
						{
							"dataset": {
								"referenceName": "ds_cleansed_customers",
								"type": "DatasetReference"
							},
							"name": "CustomersCleansed"
						},
						{
							"dataset": {
								"referenceName": "ds_cleansed_products",
								"type": "DatasetReference"
							},
							"name": "ProductsCleansed"
						},
						{
							"dataset": {
								"referenceName": "ds_cleansed_stores",
								"type": "DatasetReference"
							},
							"name": "StoresCleansed"
						},
						{
							"dataset": {
								"referenceName": "ds_cleansed_orders",
								"type": "DatasetReference"
							},
							"name": "OrdersCleansed"
						}
					],
					"transformations": [
						{
							"name": "CastDataItems"
						},
						{
							"name": "UpdatedTimeStampOrderItems"
						},
						{
							"name": "DropLineItemId"
						},
						{
							"name": "CastDataTypesCustomers"
						},
						{
							"name": "UpdtaedTimeStampCustomers"
						},
						{
							"name": "CastDataTypesProducts"
						},
						{
							"name": "UpdatedTimeStamProducts"
						},
						{
							"name": "CastDataTypesStores"
						},
						{
							"name": "DropWebAddressandReorder"
						},
						{
							"name": "UpdateTimeStamp"
						},
						{
							"name": "OrderDateAndUpdatedTimeStamp"
						},
						{
							"name": "CastDataTypesorders"
						},
						{
							"name": "DropDateTimeAndReOrder"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ORDER_ID as short,",
						"          LINE_ITEM_ID as short,",
						"          PRODUCT_ID as short,",
						"          UNIT_PRICE as double,",
						"          QUANTITY as short",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> OrderItemsRaw",
						"source(output(",
						"          CUSTOMER_ID as short,",
						"          EMAIL_ADDRESS as string,",
						"          FULL_NAME as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine') ~> CustomersRaw",
						"source(output(",
						"          PRODUCT_ID as short,",
						"          PRODUCT_NAME as string,",
						"          UNIT_PRICE as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine') ~> ProductsRaw",
						"source(output(",
						"          LATITUDE as double,",
						"          LONGITUDE as double,",
						"          STORE_ID as short,",
						"          STORE_NAME as string,",
						"          WEB_ADDRESS as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine') ~> StoresRaw",
						"source(output(",
						"          ORDER_ID as string,",
						"          ORDER_DATETIME as string,",
						"          CUSTOMER_ID as string,",
						"          ORDER_STATUS as string,",
						"          STORE_ID as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> OrdersRaw",
						"OrderItemsRaw cast(output(",
						"          ORDER_ID as integer,",
						"          LINE_ITEM_ID as short,",
						"          PRODUCT_ID as integer,",
						"          UNIT_PRICE as double,",
						"          QUANTITY as integer",
						"     ),",
						"     errors: true) ~> CastDataItems",
						"CastDataItems derive(UPDATED_TIMESTAMP = currentUTC()) ~> UpdatedTimeStampOrderItems",
						"UpdatedTimeStampOrderItems select(mapColumn(",
						"          ORDER_ID,",
						"          PRODUCT_ID,",
						"          UNIT_PRICE,",
						"          QUANTITY,",
						"          UPDATED_TIMESTAMP",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> DropLineItemId",
						"CustomersRaw cast(output(",
						"          CUSTOMER_ID as integer,",
						"          EMAIL_ADDRESS as string,",
						"          FULL_NAME as string",
						"     ),",
						"     errors: true) ~> CastDataTypesCustomers",
						"CastDataTypesCustomers derive(UPDATED_TIMESTAMP = currentUTC()) ~> UpdtaedTimeStampCustomers",
						"ProductsRaw cast(output(",
						"          PRODUCT_ID as integer,",
						"          PRODUCT_NAME as string,",
						"          UNIT_PRICE as double",
						"     ),",
						"     errors: true) ~> CastDataTypesProducts",
						"CastDataTypesProducts derive(UPDATED_TIMESTAMP = currentUTC()) ~> UpdatedTimeStamProducts",
						"StoresRaw cast(output(",
						"          LATITUDE as double,",
						"          LONGITUDE as double,",
						"          STORE_ID as short,",
						"          STORE_NAME as string,",
						"          WEB_ADDRESS as string",
						"     ),",
						"     errors: true) ~> CastDataTypesStores",
						"CastDataTypesStores select(mapColumn(",
						"          STORE_ID,",
						"          STORE_NAME,",
						"          LATITUDE,",
						"          LONGITUDE",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> DropWebAddressandReorder",
						"DropWebAddressandReorder derive(UPDATED_TIMESTAMP = currentUTC()) ~> UpdateTimeStamp",
						"OrdersRaw derive(ORDER_DATE = toDate(ORDER_DATETIME,'dd-MMM-yy HH.ss.SS'),",
						"          UPDATED_TIMESTAMP = currentUTC()) ~> OrderDateAndUpdatedTimeStamp",
						"OrderDateAndUpdatedTimeStamp cast(output(",
						"          ORDER_ID as integer,",
						"          ORDER_DATETIME as string,",
						"          CUSTOMER_ID as integer,",
						"          ORDER_STATUS as string,",
						"          STORE_ID as integer,",
						"          ORDER_DATE as date,",
						"          UPDATED_TIMESTAMP as timestamp",
						"     ),",
						"     errors: true) ~> CastDataTypesorders",
						"CastDataTypesorders select(mapColumn(",
						"          ORDER_ID,",
						"          ORDER_DATE,",
						"          CUSTOMER_ID,",
						"          ORDER_STATUS,",
						"          STORE_ID,",
						"          UPDATED_TIMESTAMP",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> DropDateTimeAndReOrder",
						"DropLineItemId sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> OrderItemsCleansed",
						"UpdtaedTimeStampCustomers sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> CustomersCleansed",
						"UpdatedTimeStamProducts sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> ProductsCleansed",
						"UpdateTimeStamp sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> StoresCleansed",
						"DropDateTimeAndReOrder sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> OrdersCleansed"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_raw_order_items')]",
				"[concat(variables('factoryId'), '/datasets/ds_raw_customers')]",
				"[concat(variables('factoryId'), '/datasets/ds_raw_product')]",
				"[concat(variables('factoryId'), '/datasets/dl_raw_stores')]",
				"[concat(variables('factoryId'), '/datasets/ds_landing_orders')]",
				"[concat(variables('factoryId'), '/datasets/ds_cleansed_order_items')]",
				"[concat(variables('factoryId'), '/datasets/ds_cleansed_customers')]",
				"[concat(variables('factoryId'), '/datasets/ds_cleansed_products')]",
				"[concat(variables('factoryId'), '/datasets/ds_cleansed_stores')]",
				"[concat(variables('factoryId'), '/datasets/ds_cleansed_orders')]"
			]
		}
	]
}